// Generated by view binder compiler. Do not edit!
package com.pprior.quizz.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.pprior.quizz.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTypesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FragmentContainerView barCard;

  @NonNull
  public final Guideline guidelineHorizontal;

  @NonNull
  public final Guideline guidelineVertical;

  @NonNull
  public final FragmentContainerView otherCard;

  @NonNull
  public final FragmentContainerView starCard;

  @NonNull
  public final FragmentContainerView yesNoCard;

  private FragmentTypesBinding(@NonNull ConstraintLayout rootView,
      @NonNull FragmentContainerView barCard, @NonNull Guideline guidelineHorizontal,
      @NonNull Guideline guidelineVertical, @NonNull FragmentContainerView otherCard,
      @NonNull FragmentContainerView starCard, @NonNull FragmentContainerView yesNoCard) {
    this.rootView = rootView;
    this.barCard = barCard;
    this.guidelineHorizontal = guidelineHorizontal;
    this.guidelineVertical = guidelineVertical;
    this.otherCard = otherCard;
    this.starCard = starCard;
    this.yesNoCard = yesNoCard;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTypesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTypesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_types, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTypesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bar_card;
      FragmentContainerView barCard = ViewBindings.findChildViewById(rootView, id);
      if (barCard == null) {
        break missingId;
      }

      id = R.id.guideline_horizontal;
      Guideline guidelineHorizontal = ViewBindings.findChildViewById(rootView, id);
      if (guidelineHorizontal == null) {
        break missingId;
      }

      id = R.id.guideline_vertical;
      Guideline guidelineVertical = ViewBindings.findChildViewById(rootView, id);
      if (guidelineVertical == null) {
        break missingId;
      }

      id = R.id.other_card;
      FragmentContainerView otherCard = ViewBindings.findChildViewById(rootView, id);
      if (otherCard == null) {
        break missingId;
      }

      id = R.id.star_card;
      FragmentContainerView starCard = ViewBindings.findChildViewById(rootView, id);
      if (starCard == null) {
        break missingId;
      }

      id = R.id.yes_no_card;
      FragmentContainerView yesNoCard = ViewBindings.findChildViewById(rootView, id);
      if (yesNoCard == null) {
        break missingId;
      }

      return new FragmentTypesBinding((ConstraintLayout) rootView, barCard, guidelineHorizontal,
          guidelineVertical, otherCard, starCard, yesNoCard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
